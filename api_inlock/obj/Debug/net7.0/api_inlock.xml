<?xml version="1.0"?>
<doc>
    <assembly>
        <name>api_inlock</name>
    </assembly>
    <members>
        <member name="M:api_inlock.Controllers.EstudioController.Post(api_inlock.Domains.EstudioDomain)">
            <summary>
            Endpoint que aciona metodo de cadastrar um novo estudio
            </summary>
            <param name="estudio">Estudio que sera cadastrado</param>
            <returns>Retorna statusCode 200</returns>
        </member>
        <member name="M:api_inlock.Controllers.EstudioController.Get">
            <summary>
            Endpoint que aciona metodo para listar todos os estudios
            </summary>
            <returns>Retorna uma lista com os estudios</returns>
        </member>
        <member name="M:api_inlock.Controllers.EstudioController.Delete(System.Int32)">
            <summary>
            Aciona um metodo que deleta um estudio por uma id
            </summary>
            <param name="id">Id do estudio que sera deletado</param>
            <returns>Retorna um StatusCode 204</returns>
        </member>
        <member name="M:api_inlock.Controllers.JogoController.Post(api_inlock.Domains.JogoDomain)">
            <summary>
            Endpoint que aciona o metodo de cadastrar um jogo
            </summary>
            <param name="jogo">Jogo que será cadastrado</param>
            <returns>Retorna status code 201</returns>
        </member>
        <member name="M:api_inlock.Controllers.JogoController.Delete(System.Int32)">
            <summary>
            Endpoint que aciona o metodo de deletar um jogo
            </summary>
            <param name="id">Id do jogo que será deletado</param>
            <returns>Retorna status code 200 com uma mensagem</returns>
        </member>
        <member name="M:api_inlock.Controllers.JogoController.Get">
            <summary>
            Endpoint que aciona o metodo de listar todos os jogos
            </summary>
            <returns>Retorna uma lista com todos os jogos</returns>
        </member>
        <member name="M:api_inlock.Controllers.UsuarioController.Login(api_inlock.Domains.UsuarioDomain)">
            <summary>
            Endpoint que aciona o metodo de login
            </summary>
            <param name="usuario">Usuario que sera autenticado</param>
            <returns>Retorna um token</returns>
        </member>
        <member name="M:api_inlock.Interfaces.IEstudioRepository.Cadastrar(api_inlock.Domains.EstudioDomain)">
            <summary>
            Cadastra um estudio
            </summary>
            <param name="estudio">Estudio que sera cadastrado</param>
        </member>
        <member name="M:api_inlock.Interfaces.IEstudioRepository.ListarTodos">
            <summary>
            Lista todos os estudios existentes no banco de dados
            </summary>
            <returns>Retorna a lista de estudios</returns>
        </member>
        <member name="M:api_inlock.Interfaces.IEstudioRepository.Deletar(System.Int32)">
            <summary>
            Deleta um estudio
            </summary>
            <param name="estudio">Estudio que sera deletado</param>
        </member>
        <member name="M:api_inlock.Interfaces.IJogoRepository.Cadastrar(api_inlock.Domains.JogoDomain)">
            <summary>
            Cadastra um novo jogo
            </summary>
            <param name="jogo">Novo jogo que sera cadastrado</param>
        </member>
        <member name="M:api_inlock.Interfaces.IJogoRepository.ListarTodos">
            <summary>
            Lista todos os jogos existentes
            </summary>
            <returns>Retorna uma lista com todos os jogos</returns>
        </member>
        <member name="M:api_inlock.Interfaces.IJogoRepository.Deletar(System.Int32)">
            <summary>
            Deleta um jogo
            </summary>
            <param name="jogo">Jogo que sera deletado</param>
        </member>
        <member name="M:api_inlock.Repositories.EstudioRepository.Cadastrar(api_inlock.Domains.EstudioDomain)">
            <summary>
            Cadastra um estudio
            </summary>
            <param name="estudio">Estudio que sera cadastrado</param>
        </member>
        <member name="M:api_inlock.Repositories.EstudioRepository.Deletar(System.Int32)">
            <summary>
            Deleta um estudio
            </summary>
            <param name="id">Estudio que sera deletado</param>
        </member>
        <member name="M:api_inlock.Repositories.EstudioRepository.ListarTodos">
            <summary>
            Lista todos os estudios existentes no banco de dados
            </summary>
            <returns>Retorna a lista de estudios</returns>
        </member>
        <member name="M:api_inlock.Repositories.JogoRepository.Cadastrar(api_inlock.Domains.JogoDomain)">
            <summary>
            Metodo que cadastra um novo jogo
            </summary>
            <param name="jogo">Jogo que sera cadastrado</param>
        </member>
        <member name="M:api_inlock.Repositories.JogoRepository.Deletar(System.Int32)">
            <summary>
            Metodo que deleta um jogo existente
            </summary>
            <param name="id">Id do jogo que será deletado</param>
        </member>
        <member name="M:api_inlock.Repositories.JogoRepository.ListarTodos">
            <summary>
            Metodo que lista todos os jogos 
            </summary>
            <returns>Retorna uma lista com todos os jogos</returns>
        </member>
        <member name="M:api_inlock.Repositories.UsuarioRepository.Login(System.String,System.String)">
            <summary>
            Metodo que compara a senha e email com os mesmos do banco de dados
            </summary>
            <param name="Email">Email que será comparado</param>
            <param name="Senha">Senha que será comparada</param>
            <returns></returns>
        </member>
    </members>
</doc>
